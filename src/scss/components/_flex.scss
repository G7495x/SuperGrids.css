@import "variables";
@import "breakpoints";

@mixin horz($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; flex-direction: row } }
@mixin vert($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; flex-direction: column } }
@mixin horz-rev($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; flex-direction: row-reverse } }
@mixin vert-rev($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; flex-direction: column-reverse } }

@mixin f-wrap($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; flex-wrap: wrap } }
@mixin f-wrap-rev($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; flex-wrap: wrap-reverse } }
@mixin f-nowrap($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; flex-wrap: nowrap } }

@mixin f-start($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; align-items: flex-start } }
@mixin f-end($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; align-items: flex-end } }
@mixin f-center($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; align-items: center } }
@mixin f-baseline($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; align-items: baseline } }
@mixin f-stretch($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; align-items: stretch } }

@mixin justify-start($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; justify-content: flex-start } }
@mixin justify-end($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; justify-content: flex-end } }
@mixin justify-center($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; justify-content: center } }
@mixin justify-space-between($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; justify-content: space-between } }
@mixin justify-space-around($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; justify-content: space-around } }
@mixin justify-space-evenly($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; justify-content: space-evenly } }

@mixin content-start($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; align-content: flex-start } }
@mixin content-end($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; align-content: flex-end } }
@mixin content-center($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; align-content: center } }
@mixin content-space-between($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; align-content: space-between } }
@mixin content-space-around($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; align-content: space-around } }
@mixin content-space-evenly($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; align-content: space-evenly } }
@mixin content-stretch($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ display: flex; align-content: stretch } }

@mixin super-center($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ @include f-center; justify-content: center; align-content: center } }

@mixin self-auto($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ align-self: auto } }
@mixin self-start($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ align-self: flex-start } }
@mixin self-end($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ align-self: flex-end } }
@mixin self-center($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ align-self: center } }
@mixin self-baseline($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ align-self: baseline } }
@mixin self-stretch($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ align-self: stretch } }

@mixin fill($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ flex: 1 } }
@mixin nofill($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ flex: 0 auto } }
@mixin grow-0($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ flex-grow: 0 } }
@mixin grow-1($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ flex-grow: 1 } }
@mixin shrink-0($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ flex-shrink: 0 } }
@mixin shrink-1($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ flex-shrink: 1 } }

@mixin order($n,$up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ order: $n } }
@mixin order-first($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ order: -1*($grid-columns+1) } }
@mixin order-last($up: null,$down: null,$breakpoints: $grid-breakpoints){ @include resp($up,$down,$breakpoints){ order: $grid-columns+1 } }

@each $breakpoint in map-keys($grid-breakpoints){
	$suffix: breakpoint-suffix($breakpoint);
	@include media-breakpoint-up($breakpoint){
		.horz#{$suffix}{ @include horz }
		.vert#{$suffix}{ @include vert }
		.horz-rev#{$suffix}{ @include horz-rev }
		.vert-rev#{$suffix}{ @include vert-rev }

		.f-wrap#{$suffix}{ @include f-wrap }
		.f-wrap-rev#{$suffix}{ @include f-wrap-rev }
		.f-nowrap#{$suffix}{ @include f-nowrap }

		.f-start#{$suffix}{ @include f-start }
		.f-end#{$suffix}{ @include f-end }
		.f-center#{$suffix}{ @include f-center }
		.f-baseline#{$suffix}{ @include f-baseline }
		.f-stretch#{$suffix}{ @include f-stretch }

		.justify-start#{$suffix}{ @include justify-start }
		.justify-end#{$suffix}{ @include justify-end }
		.justify-center#{$suffix}{ @include justify-center }
		.justify-space-between#{$suffix}{ @include justify-space-between }
		.justify-space-around#{$suffix}{ @include justify-space-around }
		.justify-space-evenly#{$suffix}{ @include justify-space-evenly }

		.content-start#{$suffix}{ @include content-start }
		.content-end#{$suffix}{ @include content-end }
		.content-center#{$suffix}{ @include content-center }
		.content-space-between#{$suffix}{ @include content-space-between }
		.content-space-around#{$suffix}{ @include content-space-around }
		.content-space-evenly#{$suffix}{ @include content-space-evenly }
		.content-stretch#{$suffix}{ @include content-stretch }

		.super-center#{$suffix}{ @include super-center }

		.self-auto#{$suffix}{ @include self-auto }
		.self-start#{$suffix}{ @include self-start }
		.self-end#{$suffix}{ @include self-end }
		.self-center#{$suffix}{ @include self-center }
		.self-baseline#{$suffix}{ @include self-baseline }
		.self-stretch#{$suffix}{ @include self-stretch }

		.fill#{$suffix}{ @include fill }
		.nofill#{$suffix}{ @include nofill }
		.grow-0#{$suffix}{ @include grow-0 }
		.grow-1#{$suffix}{ @include grow-1 }
		.shrink-0#{$suffix}{ @include shrink-0 }
		.shrink-1#{$suffix}{ @include shrink-1 }

		@for $n from -1*$grid-columns through -1{ .order-m#{-1*$n}#{$suffix}{ @include order($n) } }
		@for $n from 0 through $grid-columns{ .order-#{$n}#{$suffix}{ @include order($n) } }
		.order-first#{$suffix}{ @include order-first }
		.order-last#{$suffix}{ @include order-last }
	}
}
