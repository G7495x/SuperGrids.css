/// TODO: everything mixin

/* Grid Component */

@mixin grid-package(
	$columns: $grid-columns,            // Number of columns (Adjustable)
	$breakpoints: $grid-breakpoints,    // Custom breakpoints, default: $grid-breakpoints
	$spacing-step: $grid-step-size,     // Size of step by which spc values are incremented (in px)
	$spacing-steps: $grid-spacing-steps // No. of spc increments. Ex: 4 steps of 5px each gives spc-0, spc-5, spc-10, spc-15, spc-20
){
	*,
	*::before,
	*::after{
		--colCount:    #{$columns};
		--colMarginX:  0px;
		--colMarginY:  0px;
		--colSize:     initial;
		--colWidth:    initial;
		--rowPaddingX: 0px;
		--rowPaddingY: 0px;
	}

	@each $breakpoint in map-keys($breakpoints){
		$suffix: breakpoint-suffix($breakpoint);
		@include media-breakpoint-up($breakpoint){
			$list: ".row#{$suffix}";
			@for $i from 1 through $columns{
				$list: $list+",.row-#{$i}#{$suffix}";
				.row-#{$i}#{$suffix}>*{ --colCount: #{$i} }
			}
			#{$list}{ @include _row($imp: true) }
		}
	}

	@each $breakpoint in map-keys($breakpoints){
		$suffix: breakpoint-suffix($breakpoint);
		@include media-breakpoint-up($breakpoint){
			@for $i from 0 through $spacing-steps{
				$gap: $i*$spacing-step;
				.spc-#{$gap}#{$suffix}{ @include spc($gap*1px) }
			}
			@for $i from 0 through $spacing-steps{
				$gap: $i*$spacing-step;
				.spc-x-#{$gap}#{$suffix}{ @include spc-x($gap*1px) }
				.spc-y-#{$gap}#{$suffix}{ @include spc-y($gap*1px) }
			}
		}
	}

	@each $breakpoint in map-keys($breakpoints){
		$suffix: breakpoint-suffix($breakpoint);
		@include media-breakpoint-up($breakpoint){
			.col#{$suffix}{ @include col($imp: true) }
			.col-auto#{$suffix}{ @include col(auto,$imp: true) }
			$list: "";
			@for $i from 1 through $columns{
				$list: $list+".col-#{$i}#{$suffix},";
				.col-#{$i}#{$suffix}{ --colSize: #{$i}; }
			}
			#{$list}{ @include _col($imp: true) }
		}
	}

	@each $breakpoint in map-keys($breakpoints){
		$suffix: breakpoint-suffix($breakpoint);
		@include media-breakpoint-up($breakpoint){
			.col-extrude#{$suffix},.col-ext#{$suffix}{ @include col-extrude($imp: true) }
		}
	}

	@each $breakpoint in map-keys($breakpoints){
		$suffix: breakpoint-suffix($breakpoint);
		@include media-breakpoint-up($breakpoint){
			.col-extrude-x#{$suffix},.col-ext-x#{$suffix}{ @include col-extrude-x($imp: true) }
			.col-extrude-y#{$suffix},.col-ext-y#{$suffix}{ @include col-extrude-y($imp: true) }
		}
	}

	@each $breakpoint in map-keys($breakpoints){
		$suffix: breakpoint-suffix($breakpoint);
		@include media-breakpoint-up($breakpoint){
			.col-extrude-t#{$suffix},.col-ext-t#{$suffix}{ @include col-extrude-t($imp: true) }
			.col-extrude-r#{$suffix},.col-ext-r#{$suffix}{ @include col-extrude-r($imp: true) }
			.col-extrude-b#{$suffix},.col-ext-b#{$suffix}{ @include col-extrude-b($imp: true) }
			.col-extrude-l#{$suffix},.col-ext-l#{$suffix}{ @include col-extrude-l($imp: true) }
		}
	}

	@each $breakpoint in map-keys($breakpoints){
		@include media-breakpoint-only($breakpoint){
			.col-extrude-#{$breakpoint}-o,.col-ext-#{$breakpoint}-o{ @include col-extrude($imp: true) }
		}
	}

	@each $breakpoint in map-keys($breakpoints){
		@include media-breakpoint-only($breakpoint){
			.col-extrude-x-#{$breakpoint}-o,.col-ext-x-#{$breakpoint}-o{ @include col-extrude-x($imp: true) }
			.col-extrude-y-#{$breakpoint}-o,.col-ext-y-#{$breakpoint}-o{ @include col-extrude-y($imp: true) }
		}
	}

	@each $breakpoint in map-keys($breakpoints){
		@include media-breakpoint-only($breakpoint){
			.col-extrude-t-#{$breakpoint}-o,.col-ext-t-#{$breakpoint}-o{ @include col-extrude-t($imp: true) }
			.col-extrude-r-#{$breakpoint}-o,.col-ext-r-#{$breakpoint}-o{ @include col-extrude-r($imp: true) }
			.col-extrude-b-#{$breakpoint}-o,.col-ext-b-#{$breakpoint}-o{ @include col-extrude-b($imp: true) }
			.col-extrude-l-#{$breakpoint}-o,.col-ext-l-#{$breakpoint}-o{ @include col-extrude-l($imp: true) }
		}
	}

	@each $breakpoint in map-keys($breakpoints){
		$suffix: breakpoint-suffix($breakpoint);
		.row-breaker#{$suffix}{ @include row-breaker($breakpoint,$imp: true) }
	}

	@each $breakpoint in map-keys($breakpoints){
		.row-breaker-#{$breakpoint}-o{ @include row-breaker($breakpoint,$breakpoint,$imp: true) }
	}
}

@include grid-package
