@each $breakpoint in map-keys($grid-breakpoints){
	$suffix: breakpoint-suffix($breakpoint);
	@include media-breakpoint-up($breakpoint){
		// Space-Between Rules
		@for $size from 0 through $spacing-steps{
			$size: $size*$spacing-step-size;
			.spb-x-#{$size}#{$suffix}{ @include spb-x($size*1px) }
			.spb-y-#{$size}#{$suffix}{ @include spb-y($size*1px) }
		}

		.m-auto#{$suffix}{ @include m(auto) }
		@for $size from 0 through $spacing-steps{
			$size: $size*$spacing-step-size;
			.m-#{$size}#{$suffix}{ @include m($size*1px) }
			@if $size!=0{ .m-m#{$size}#{$suffix}{ @include m($size*-1px) } }
			.b-#{$size}#{$suffix}{ @include b($size*1px) }
			.p-#{$size}#{$suffix}{ @include p($size*1px) }
		}

		.mx-auto#{$suffix}{ @include mx(auto) }
		@for $size from 0 through $spacing-steps{
			$size: $size*$spacing-step-size;
			.mx-#{$size}#{$suffix}{ @include mx($size*1px) }
			@if $size!=0{ .mx-m#{$size}#{$suffix}{ @include mx($size*-1px) } }
			.bx-#{$size}#{$suffix}{ @include bx($size*1px) }
			.px-#{$size}#{$suffix}{ @include px($size*1px) }
		}

		.my-auto#{$suffix}{ @include my(auto) }
		@for $size from 0 through $spacing-steps{
			$size: $size*$spacing-step-size;
			.my-#{$size}#{$suffix}{ @include my($size*1px) }
			@if $size!=0{ .my-m#{$size}#{$suffix}{ @include my($size*-1px) } }
			.by-#{$size}#{$suffix}{ @include by($size*1px) }
			.py-#{$size}#{$suffix}{ @include py($size*1px) }
		}

		.mt-auto#{$suffix}{ @include mt(auto) }
		@for $size from 0 through $spacing-steps{
			$size: $size*$spacing-step-size;
			.mt-#{$size}#{$suffix}{ @include mt($size*1px) }
			@if $size!=0{ .mt-m#{$size}#{$suffix}{ @include mt($size*-1px) } }
			.bt-#{$size}#{$suffix}{ @include bt($size*1px) }
			.pt-#{$size}#{$suffix}{ @include pt($size*1px) }
		}

		.mr-auto#{$suffix}{ @include mr(auto) }
		@for $size from 0 through $spacing-steps{
			$size: $size*$spacing-step-size;
			.mr-#{$size}#{$suffix}{ @include mr($size*1px) }
			@if $size!=0{ .mr-m#{$size}#{$suffix}{ @include mr($size*-1px) } }
			.br-#{$size}#{$suffix}{ @include br($size*1px) }
			.pr-#{$size}#{$suffix}{ @include pr($size*1px) }
		}

		.mb-auto#{$suffix}{ @include mb(auto) }
		@for $size from 0 through $spacing-steps{
			$size: $size*$spacing-step-size;
			.mb-#{$size}#{$suffix}{ @include mb($size*1px) }
			@if $size!=0{ .mb-m#{$size}#{$suffix}{ @include mb($size*-1px) } }
			.bb-#{$size}#{$suffix}{ @include bb($size*1px) }
			.pb-#{$size}#{$suffix}{ @include pb($size*1px) }
		}

		.ml-auto#{$suffix}{ @include ml(auto) }
		@for $size from 0 through $spacing-steps{
			$size: $size*$spacing-step-size;
			.ml-#{$size}#{$suffix}{ @include ml($size*1px) }
			@if $size!=0{ .ml-m#{$size}#{$suffix}{ @include ml($size*-1px) } }
			.bl-#{$size}#{$suffix}{ @include bl($size*1px) }
			.pl-#{$size}#{$suffix}{ @include pl($size*1px) }
		}
	}
}

.container{ @include container }

/* CAUTION: Should be used only with overlay scrollbars!!! */
.container-b{ @include container-b }

.container-p{ @include container-p }
