@mixin m ($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){
	--colMarginX: #{$size};
	--colMarginY: #{$size};
	margin: var(--colMarginY) var(--colMarginX) if($imp,!important,null);
}}
@mixin mx($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){
	--colMarginX: #{$size};
	margin-right: var(--colMarginX) if($imp,!important,null);
	margin-left:  var(--colMarginX) if($imp,!important,null);
}}
@mixin my($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){
	--colMarginY:  #{$size};
	margin-top:    var(--colMarginY) if($imp,!important,null);
	margin-bottom: var(--colMarginY) if($imp,!important,null);
}}
@mixin mt($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ margin-top:    $size if($imp,!important,null) }}
@mixin mr($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ margin-right:  $size if($imp,!important,null) }}
@mixin mb($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ margin-bottom: $size if($imp,!important,null) }}
@mixin ml($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ margin-left:   $size if($imp,!important,null) }}

// @mixin b ($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ border:        $size solid transparent if($imp,!important,null) }}
// @mixin bt($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ border-top:    $size solid transparent if($imp,!important,null) }}
// @mixin br($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ border-right:  $size solid transparent if($imp,!important,null) }}
// @mixin bb($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ border-bottom: $size solid transparent if($imp,!important,null) }}
// @mixin bl($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ border-left:   $size solid transparent if($imp,!important,null) }}
// @mixin bx($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ @include br($size,$imp: $imp); @include bl($size,$imp: $imp) }}
// @mixin by($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ @include bt($size,$imp: $imp); @include bb($size,$imp: $imp) }}

@mixin p ($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){
	--rowPaddingX: #{$size};
	--rowPaddingY: #{$size};
	padding: var(--rowPaddingY) var(--rowPaddingX) if($imp,!important,null);
}}
@mixin px($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){
	--rowPaddingX: #{$size};
	padding-right: var(--rowPaddingX) if($imp,!important,null);
	padding-left:  var(--rowPaddingX) if($imp,!important,null);
}}
@mixin py($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){
	--rowPaddingY:  #{$size};
	padding-top:    var(--rowPaddingY) if($imp,!important,null);
	padding-bottom: var(--rowPaddingY) if($imp,!important,null);
}}
@mixin pt($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ padding-top:    $size if($imp,!important,null) }}
@mixin pr($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ padding-right:  $size if($imp,!important,null) }}
@mixin pb($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ padding-bottom: $size if($imp,!important,null) }}
@mixin pl($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ padding-left:   $size if($imp,!important,null) }}

@mixin ingap-t($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ >*:not(:first-child) { margin: 0 if($imp,!important,null);margin-top:    $size if($imp,!important,null) }}}
@mixin ingap-r($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ >*:not(:last-child)  { margin: 0 if($imp,!important,null);margin-right:  $size if($imp,!important,null) }}}
@mixin ingap-b($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ >*:not(:last-child)  { margin: 0 if($imp,!important,null);margin-bottom: $size if($imp,!important,null) }}}
@mixin ingap-l($size,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){ >*:not(:first-child) { margin: 0 if($imp,!important,null);margin-left:   $size if($imp,!important,null) }}}

@mixin fix-aspect($aspect: 1,$up: null,$down: null,$breakpoints: $grid-breakpoints){
	@include media-breakpoint($up,$down,$breakpoints){
		--aspectRatio: #{$aspect};
		&::after{
			content: "";
			float: left;
			clear: both;
			padding-top: calc(100% / var(--aspectRatio));
		}
	}
}

// Container is used for centering webpage content on big displays.
@mixin container($name: null,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){
	@if $name{ --containerWidth: #{breakpoint-min($name,$breakpoints)} }
	width:        var(--colWidth)                               ; /// TODO: Consider !important
	max-width:    var(--containerWidth) if($imp,!important,null);
	margin-left:  auto                  if($imp,!important,null);
	margin-right: auto                  if($imp,!important,null);
	// ↓↓ Alternate implementation. Problem: Fails if container is inside a row with siblings
	// @include mx(Max(var(--colMarginX),calc(50% - Min(var(--containerWidth),var(--colWidth)) / 2)),$imp: $imp);
}}

@mixin container-fluid($up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){
	width:        unset                                     ; /// TODO: Consider !important
	max-width:    unset             if($imp,!important,null);
	margin-left:  var(--colMarginX) if($imp,!important,null);
	margin-right: var(--colMarginX) if($imp,!important,null);
}}

// Same as container, but with border instead of margin
// Caution: Should be used only with overlay scrollbars
// @mixin container-b($name: $container-breakpoint,$breakpoints: $grid-breakpoints,$imp: false){
// 	border-right: calc(50vw - #{breakpoint-min($name,$breakpoints)/2}) solid transparent if($imp,!important,null);
// 	border-left:  calc(50vw - #{breakpoint-min($name,$breakpoints)/2}) solid transparent if($imp,!important,null);
// }

// Same as container, but with padding instead of margin
// BUG: does not work along side col or col-auto
@mixin container-p($name: null,$up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){
	@if $name{ --containerWidth: #{breakpoint-min($name,$breakpoints)} }
	width:         var(--colWidth);
	$paddingX:     calc(var(--colWidth) / 2 - var(--containerWidth) / 2 + var(--rowPaddingX));
	padding-left:  $paddingX if($imp,!important,null);
	padding-right: $paddingX if($imp,!important,null);
	/* TODO: Remove above when browser support for Max() gets better */
	$paddingX: Max(calc(var(--colWidth) / 2 - var(--containerWidth) / 2), var(--rowPaddingX));
	padding-left:  $paddingX if($imp,!important,null);
	padding-right: $paddingX if($imp,!important,null);
}}

@mixin container-p-fluid($up: null,$down: null,$breakpoints: $grid-breakpoints,$imp: false){ @include media-breakpoint($up,$down,$breakpoints){
	width:         unset                                      ;
	padding-left:  var(--rowPaddingX) if($imp,!important,null);
	padding-right: var(--rowPaddingX) if($imp,!important,null);
}}
